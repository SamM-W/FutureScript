composed class User {
    constructor(
        property string name,
        property number age
    ) {
    }

    base canAccessStorefront(string storefrontId) {
        return false;
    }

    base procedure logAllPermissions() {
        console.log("Logging user permissions:");
    }
}

trait Admin {
    constructor(
    ) {
    }

    apply canAccessStorefront(string storefrontId) {
        return true;
    }

    apply procedure logAllPermissions() {
        console.log("Hello from admin permissions.");
    }
}

trait StorefrontOwner {
    constructor(
        property string storefrontId
    ) {
    }

    apply canAccessStorefront(string storefrontId) {
        return this.storefrontId == storefrontId || next;
    }

    apply procedure logAllPermissions() {
        console.log("Hello from storefont (" + this.storefrontId + ") permissions.");
    }
}

var user = new User("John", 30);
user.addTrait(new StorefrontOwner("storefrontId1"));

var user2 = new User("Jane", 25);
user2.addTrait(new StorefrontOwner("storefrontId2"));
user2.addTrait(new StorefrontOwner("storefrontId3"));

console.log(user.canAccessStorefront("storefrontId1")); // true

console.log(user2.canAccessStorefront("storefrontId1")); // false

console.log(user2.canAccessStorefront("storefrontId2")); // true
console.log(user2.canAccessStorefront("storefrontId3")); // true

user2.logAllPermissions(); // Hello from storefont (storefrontId2) permissions.